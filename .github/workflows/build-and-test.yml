name: Build

on:
  push:
    branches:
      - master
      - DEV-100_deployment-on-aws
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build Elixir project

    steps:
      - uses: actions/checkout@v2

      - name: Use Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.10.4"
          otp-version: "23.0.2"

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile application
        run: mix compile
        env:
          MIX_ENV: prod

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      - name: Use cached node_modules
        id: cache
        uses: actions/cache@v1
        with:
          path: ./assets/node_modules
          key: nodeModules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            nodeModules-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd ./assets
          yarn install
          yarn deploy
          yarn dump
      
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: backoffice
          path: |
            ./_build/prod/rel/backoffice
            ./CHANGELOG.md
            ./rel/run.sh
  
  test:
    runs-on: ubuntu-latest
    name: Test Elixir project

    needs: [ "build" ]

    services:
      db:
        image: postgres:12.1-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: "1.10.4"
          otp-version: "23.0.2"

      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Compile application
        run: mix compile
        env:
          MIX_ENV: test

      - name: Setup event store
        run: mix do event_store.create, event_store.init
        env:
          MIX_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost

      - name: Run tests
        run: mix test
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST: localhost